<style>
    hr{
        border-top-color: #d9d9d9;
        margin-top: 40px !important;
        margin-bottom: 40px !important;
    }
    #miningPorts > .stats{
        width: auto !important;
        margin-right: 70px;
        margin-left: 15px;
        display: inline-block;
    }
    #miningPorts > .stats:last-child{
        margin-right: 0;
    }
    .getting_started_windows{
        line-height: 40px;
    }
    #getting_started_list > li{
        margin-bottom: 20px;
    }
    #mining_apps > tr:first-child > td{
        padding-top: 35px;
    }
    #mining_apps > tr > td{
        border-top: none;
    }
    #mining_apps > tr:nth-child(even) > td{
        border-bottom: 1px solid #e5e5e5;
        padding-bottom: 20px;
    }
    #mining_apps > tr:nth-child(odd) > td{
        padding-top: 20px;
    }
    #mining_apps{
        margin-top: 10px;
    }
    .miningAppTitle{
        font-weight: bold;
    }
    .exampleAddress{
        font-style: italic;
    }
    #cpuminer_code{
        display: inline-block;
        white-space: normal;
    }
</style>
<h3>Connection Details</h3>
<div class="stats">
    <div><i class="fa fa-cloud"></i> Mining Pool Address: <span id="miningPoolHost"></span></div>
</div>

<h4>Mining Ports</h4>
<div id="miningPorts" class="row">
    <div class="stats">
        <div><i class="fa fa-tachometer"></i> Port: 5420 <span class=""></span></div>
        <div><i class="fa fa-unlock-alt"></i> Starting Difficulty: <span class="miningPortDiff"></span></div>
        <div><i class="fa fa-question"></i> Description: <span class="miningPortDesc"></span></div>
    </div>
</div>


<h3>Connection Details</h3>
<div class="stats">
    <div><i class="fa fa-cloud"></i> Mining Pool Address: <span id="miningPoolHost"></span></div>
</div>

<h4>Mining Ports</h4>
<div id="miningPorts" class="row">
    <div class="stats">
        <div><i class="fa fa-tachometer"></i> Port: <span class="miningPort"></span></div>
        <div><i class="fa fa-unlock-alt"></i> Starting Difficulty: <span class="miningPortDiff"></span></div>
        <div><i class="fa fa-question"></i> Description: <span class="miningPortDesc"></span></div>
    </div>
</div>

<p>The difficulty auto adjusts on all ports.</p>
<p>To use a Fixed difficulty: Append .DIFF to your username. eg
 <code>WALLET.DIFF</code>
 <code>WALLET.DIFF+workerID</code>

 <span style="display:none" id="paymentIdWallet">
 <code>WALLET.payId.diff</code>
 <code>WALLET.payId+workerID</code>
 <code>WALLET.payID.DIFF+workerID</code>
 <code>INTEGRATED_ADDRESS.DIFF+workerID</code>
 </span>
 as username.</p>

<span style="display: none" id="exchangeMining">
<hr>
<h3>Mining to an exchange</h3>
<p>This pool supports mining directly to an exchange!  <br>
To do this for exchanges using a paymentID, you need to use
<code>EXCHANGE_WALLET_ADDRESS.payment_id</code> or use the integrated address if provided <code>INTEGRATED_ADDRESS</code> as your username, and when looking
at your stats. The payment threshold for exchange addresses is <span id="paymentThreshold"></span>
<hr>
<h3>Payment ID Notice</h3>
<p>If you specify a Payment ID with the wallet information in your miner, the pool will automatically convert the address and Payment ID into an Integrated Address.</p>
<p>To look up your statistics, you must use the integrated address which is the combination of your wallet address and Payment ID.</p>
</span>

<hr>
<h3>For new DeroGold users, </h3>
<p class="getting_started_windows">
    You can download
    and run <a target="_blank" href="https://github.com/derogold/GoldWallet/releases/download/0.3.7/GoldWallet-v0.3.7-win-setup.exe">GoldWallet</a> <i class="fa fa-github"></i>
    where you can generate your TurtleCoin address to add to use with your miner.
</p>
<hr>

<h3>Mining Apps</h3>
<div class="yourStats table-responsive">
    <table class="table">
        <thead>
<!--
        <tr>
            <th><i class="fa fa-book"></i> App Name</th>
            <th><i class="fa fa-car"></i> Architecture</th>
            <th><i class="fa fa-download"></i> Downloads</th>
            <th><i class="fa fa-comments"></i> Discussion</th>
            <th><i class="fa fa-file-code-o"></i> Source Code</th>
        </tr>
        </thead>
        <tbody id="mining_apps">
        <tr>
            <td class="miningAppTitle">XMR-Stak-CPU (by fireice_uk)</td>
            <td>CPU</td>
            <td><a target="_blank" href="https://github.com/fireice-uk/xmr-stak-cpu/releases">Github</a></td>
        </tr>
	<tr>
            <td colspan="5">
                <span>Example:</span>
                <code>xmr-stak-cpu</code>
                Please edit <code>config.txt</code> file to suit your needs.
            </td>
        </tr>
-->
	<tr>
            <td class="miningAppTitle">xmrig-cpu</td>
            <td>OpenCL (AMD)</td>
            <td><a target="_blank" href="https://https://github.com/xmrig/xmrig/releases">Github</a></td>
        </tr>
        <tr>
            <td colspan="5">
                <span>Example:</span>
                <code>./xmrig -a cryptonight-turtle -o <span class="exampleHost"></span>:<span class="examplePort"></span> -u <span class="exampleAddress">YOUR_WALLET_ADDRESS</span> -p x</code>
              
            </td>
        </tr>
	
        <tr>
            <td class="miningAppTitle">xmrig-amd</td>
            <td>CPU</td>
            <td><a target="_blank" href="https://github.com/xmrig/xmrig-amd/releases">Github</a></td>
        </tr>
        <tr>
            <td colspan="5">
                <span>Example:</span>
                <code>xmrig-amd.exe -a cryptonight-turtle -o <span class="exampleHost"></span>:<span class="examplePort"></span> -u <span class="exampleAddress">YOUR_WALLET_ADDRESS</span> -p x</code>
            </td>
        </tr>
        </tbody>
    </table>
</div>


<script>

    currentPage = {
        destroy: function(){

        },
        init: function(){
        },
        update: function(){
            var portsJson = JSON.stringify(lastStats.config.ports);
            if (lastPortsJson !== portsJson) {
                if (lastStats.config.paymentIdSupported) {
                  document.getElementById('paymentThreshold').innerHTML = (lastStats.config.paymentIdMinPaymentAmount / lastStats.config.denominationUnit).toFixed(Math.log(lastStats.config.denominationUnit)/Math.log(10)) + ' ' + lastStats.config.symbol
                  if (document.getElementById('paymentIdWallet').style.display == 'none') {
                    document.getElementById('paymentIdWallet').style.display = ''
                  } else {
                    document.getElementById('paymentIdWallet').style.display = 'none'
                  }
                  if (document.getElementById('exchangeMining').style.display == 'none') {
                    document.getElementById('exchangeMining').style.display = ''
                  } else {
                    document.getElementById('exchangeMining').style.display = 'none'
                   }
                }

                lastPortsJson = portsJson;
                var $miningPortChildren = [];
                for (var i = 0; i < lastStats.config.ports.length; i++) {
                    var portData = lastStats.config.ports[i];
                    var $portChild = $(miningPortTemplate);
                    $portChild.find('.miningPort').text(portData.port);
                    $portChild.find('.miningPortDiff').text(portData.difficulty);
                    $portChild.find('.miningPortDesc').text(portData.desc);
                    $miningPortChildren.push($portChild);
                }
                $miningPorts.empty().append($miningPortChildren);
            }

            updateTextClasses('exampleHost', poolHost);
            updateTextClasses('examplePort', lastStats.config.ports[0].port.toString());

        }
    };

    document.getElementById('easyminer_link').setAttribute('href', easyminerDownload);
    document.getElementById('miningPoolHost').textContent = poolHost;

    var lastPortsJson = '';
    var $miningPorts = $('#miningPorts');
    var miningPortTemplate = $miningPorts.html();
    $miningPorts.empty();

</script>
